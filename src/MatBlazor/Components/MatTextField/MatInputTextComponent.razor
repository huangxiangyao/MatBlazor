@namespace MatBlazor
@typeparam T
@inherits BaseMatInputTextComponent<T>

<div class="@ClassMapper.AsString()" style="@Style" @ref="Ref" >
    @if (Icon != null)
    {
        <i class="material-icons mdc-text-field__icon" tabindex="@(IconOnClick.HasDelegate ? "0" : null)" onclick="@IconOnClick">@Icon</i>
    }

    @if (TextArea)
    {
        <textarea style="@InputStyle" @ref="InputRef"  placeholder="@PlaceHolder" required=@Required class="@InputClassMapper.AsString()" id="@Id" @bind="@CurrentValueAsString" aria-label="@Label" oninput="@OnInput" @onkeydown="@OnKeyDownEvent()" onkeyup=@OnKeyUp onfocusout="@OnFocusOut" onkeypress="@OnKeyPress" onfocus="@OnFocus" disabled=@Disabled readonly="@InputTextReadOnly()" @attributes="Attributes" />
    }
    else
    {
        <input style="@InputStyle" @ref="InputRef"  type="@Type" placeholder="@PlaceHolder" required=@Required class="@InputClassMapper.AsString()" id="@Id" @bind="@CurrentValueAsString" aria-label="@Label" oninput="@OnInput" @onkeydown="@OnKeyDownEvent()" onkeyup=@OnKeyUp onfocusout=@OnFocusOut onkeypress="@OnKeyPress" onfocus="@OnFocus" disabled=@Disabled readonly="@InputTextReadOnly()" @attributes="Attributes" />
    }

    @if (!FullWidth && Outlined)
    {
        <div class="mdc-notched-outline">
            <div class="mdc-notched-outline__leading"></div>
            @if (Label != null)
            {
                <div class="mdc-notched-outline__notch">
                    <label class="@LabelClassMapper.Class" for="@Id">@Label</label>
                </div>
            }
            <div class="mdc-notched-outline__trailing"></div>
        </div>
    }
    else
    {
        if (Label != null)
        {
            <label class="@LabelClassMapper.Class" for="@Id">@Label</label>
        }
        <div class="mdc-line-ripple"></div>
    }

    @BuildRenderTreeChildContent()

</div>
@if (HelperText != null)
{
    <div class="mdc-text-field-helper-line">
        <div class="@HelperTextClassMapper.Class" aria-hidden="@(!HelperTextPersistent)">@HelperText</div>
    </div>
}